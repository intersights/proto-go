// Code generated by protoc-gen-go. DO NOT EDIT.
// source: apps.proto

/*
Package apps is a generated protocol buffer package.

Storage of applications

It is generated from these files:
	apps.proto

It has these top-level messages:
	AppRequest
	AppsRetrieveRequest
	AppSummaryResponse
	AppResponse
	AppSummariesResponse
	AppsResponse
	AppListRequest
	AppRegisterRequest
	AppRegisterResponse
	AppUpdateResponse
	AppGroup
	AppGroups
*/
package apps

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AppRelease int32

const (
	AppRelease_STABLE    AppRelease = 0
	AppRelease_BETA      AppRelease = 1
	AppRelease_ALPHA     AppRelease = 2
	AppRelease_PRE_ALPHA AppRelease = 3
)

var AppRelease_name = map[int32]string{
	0: "STABLE",
	1: "BETA",
	2: "ALPHA",
	3: "PRE_ALPHA",
}
var AppRelease_value = map[string]int32{
	"STABLE":    0,
	"BETA":      1,
	"ALPHA":     2,
	"PRE_ALPHA": 3,
}

func (x AppRelease) String() string {
	return proto.EnumName(AppRelease_name, int32(x))
}
func (AppRelease) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AppRequest struct {
	VendorId    string     `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id          string     `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	IncludeYaml bool       `protobuf:"varint,3,opt,name=include_yaml,json=includeYaml" json:"include_yaml,omitempty"`
	Release     AppRelease `protobuf:"varint,4,opt,name=release,enum=apps.AppRelease" json:"release,omitempty"`
}

func (m *AppRequest) Reset()                    { *m = AppRequest{} }
func (m *AppRequest) String() string            { return proto.CompactTextString(m) }
func (*AppRequest) ProtoMessage()               {}
func (*AppRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AppRequest) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppRequest) GetIncludeYaml() bool {
	if m != nil {
		return m.IncludeYaml
	}
	return false
}

func (m *AppRequest) GetRelease() AppRelease {
	if m != nil {
		return m.Release
	}
	return AppRelease_STABLE
}

type AppsRetrieveRequest struct {
	Request  []*AppRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
	Language string        `protobuf:"bytes,2,opt,name=language" json:"language,omitempty"`
}

func (m *AppsRetrieveRequest) Reset()                    { *m = AppsRetrieveRequest{} }
func (m *AppsRetrieveRequest) String() string            { return proto.CompactTextString(m) }
func (*AppsRetrieveRequest) ProtoMessage()               {}
func (*AppsRetrieveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AppsRetrieveRequest) GetRequest() []*AppRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *AppsRetrieveRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type AppSummaryResponse struct {
	VendorId    string     `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id          string     `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Name        string     `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Category    string     `protobuf:"bytes,5,opt,name=category" json:"category,omitempty"`
	Group       string     `protobuf:"bytes,6,opt,name=group" json:"group,omitempty"`
	Icon        string     `protobuf:"bytes,7,opt,name=icon" json:"icon,omitempty"`
	AppType     string     `protobuf:"bytes,8,opt,name=app_type,json=appType" json:"app_type,omitempty"`
	UiMode      string     `protobuf:"bytes,9,opt,name=ui_mode,json=uiMode" json:"ui_mode,omitempty"`
	Color       string     `protobuf:"bytes,10,opt,name=color" json:"color,omitempty"`
	Installable bool       `protobuf:"varint,11,opt,name=installable" json:"installable,omitempty"`
	Release     AppRelease `protobuf:"varint,12,opt,name=release,enum=apps.AppRelease" json:"release,omitempty"`
	Priority    int32      `protobuf:"varint,13,opt,name=priority" json:"priority,omitempty"`
}

func (m *AppSummaryResponse) Reset()                    { *m = AppSummaryResponse{} }
func (m *AppSummaryResponse) String() string            { return proto.CompactTextString(m) }
func (*AppSummaryResponse) ProtoMessage()               {}
func (*AppSummaryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AppSummaryResponse) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppSummaryResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppSummaryResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppSummaryResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AppSummaryResponse) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *AppSummaryResponse) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *AppSummaryResponse) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *AppSummaryResponse) GetAppType() string {
	if m != nil {
		return m.AppType
	}
	return ""
}

func (m *AppSummaryResponse) GetUiMode() string {
	if m != nil {
		return m.UiMode
	}
	return ""
}

func (m *AppSummaryResponse) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *AppSummaryResponse) GetInstallable() bool {
	if m != nil {
		return m.Installable
	}
	return false
}

func (m *AppSummaryResponse) GetRelease() AppRelease {
	if m != nil {
		return m.Release
	}
	return AppRelease_STABLE
}

func (m *AppSummaryResponse) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

type AppResponse struct {
	VendorId       string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id             string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	DefinitionYaml string `protobuf:"bytes,3,opt,name=definition_yaml,json=definitionYaml" json:"definition_yaml,omitempty"`
}

func (m *AppResponse) Reset()                    { *m = AppResponse{} }
func (m *AppResponse) String() string            { return proto.CompactTextString(m) }
func (*AppResponse) ProtoMessage()               {}
func (*AppResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AppResponse) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppResponse) GetDefinitionYaml() string {
	if m != nil {
		return m.DefinitionYaml
	}
	return ""
}

type AppSummariesResponse struct {
	Apps []*AppSummaryResponse `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
}

func (m *AppSummariesResponse) Reset()                    { *m = AppSummariesResponse{} }
func (m *AppSummariesResponse) String() string            { return proto.CompactTextString(m) }
func (*AppSummariesResponse) ProtoMessage()               {}
func (*AppSummariesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AppSummariesResponse) GetApps() []*AppSummaryResponse {
	if m != nil {
		return m.Apps
	}
	return nil
}

type AppsResponse struct {
	Apps []*AppResponse `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
}

func (m *AppsResponse) Reset()                    { *m = AppsResponse{} }
func (m *AppsResponse) String() string            { return proto.CompactTextString(m) }
func (*AppsResponse) ProtoMessage()               {}
func (*AppsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AppsResponse) GetApps() []*AppResponse {
	if m != nil {
		return m.Apps
	}
	return nil
}

type AppListRequest struct {
	VendorId    string        `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	IncludeYaml bool          `protobuf:"varint,2,opt,name=include_yaml,json=includeYaml" json:"include_yaml,omitempty"`
	Filter      []*AppRequest `protobuf:"bytes,3,rep,name=filter" json:"filter,omitempty"`
}

func (m *AppListRequest) Reset()                    { *m = AppListRequest{} }
func (m *AppListRequest) String() string            { return proto.CompactTextString(m) }
func (*AppListRequest) ProtoMessage()               {}
func (*AppListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AppListRequest) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppListRequest) GetIncludeYaml() bool {
	if m != nil {
		return m.IncludeYaml
	}
	return false
}

func (m *AppListRequest) GetFilter() []*AppRequest {
	if m != nil {
		return m.Filter
	}
	return nil
}

type AppRegisterRequest struct {
	VendorId       string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id             string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	DefinitionYaml string `protobuf:"bytes,3,opt,name=definition_yaml,json=definitionYaml" json:"definition_yaml,omitempty"`
}

func (m *AppRegisterRequest) Reset()                    { *m = AppRegisterRequest{} }
func (m *AppRegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*AppRegisterRequest) ProtoMessage()               {}
func (*AppRegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AppRegisterRequest) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppRegisterRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppRegisterRequest) GetDefinitionYaml() string {
	if m != nil {
		return m.DefinitionYaml
	}
	return ""
}

type AppRegisterResponse struct {
	VendorId   string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id         string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	EntityCode string `protobuf:"bytes,3,opt,name=entity_code,json=entityCode" json:"entity_code,omitempty"`
}

func (m *AppRegisterResponse) Reset()                    { *m = AppRegisterResponse{} }
func (m *AppRegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*AppRegisterResponse) ProtoMessage()               {}
func (*AppRegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AppRegisterResponse) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppRegisterResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppRegisterResponse) GetEntityCode() string {
	if m != nil {
		return m.EntityCode
	}
	return ""
}

type AppUpdateResponse struct {
	VendorId string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Updated  bool   `protobuf:"varint,3,opt,name=updated" json:"updated,omitempty"`
}

func (m *AppUpdateResponse) Reset()                    { *m = AppUpdateResponse{} }
func (m *AppUpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*AppUpdateResponse) ProtoMessage()               {}
func (*AppUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AppUpdateResponse) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppUpdateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppUpdateResponse) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

type AppGroup struct {
	VendorId       string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id             string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Name           string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description    string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Icon           string `protobuf:"bytes,5,opt,name=icon" json:"icon,omitempty"`
	Category       string `protobuf:"bytes,6,opt,name=category" json:"category,omitempty"`
	Color          string `protobuf:"bytes,7,opt,name=color" json:"color,omitempty"`
	DefinitionYaml string `protobuf:"bytes,8,opt,name=definition_yaml,json=definitionYaml" json:"definition_yaml,omitempty"`
}

func (m *AppGroup) Reset()                    { *m = AppGroup{} }
func (m *AppGroup) String() string            { return proto.CompactTextString(m) }
func (*AppGroup) ProtoMessage()               {}
func (*AppGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AppGroup) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AppGroup) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *AppGroup) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *AppGroup) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *AppGroup) GetDefinitionYaml() string {
	if m != nil {
		return m.DefinitionYaml
	}
	return ""
}

type AppGroups struct {
	Groups []*AppGroup `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
}

func (m *AppGroups) Reset()                    { *m = AppGroups{} }
func (m *AppGroups) String() string            { return proto.CompactTextString(m) }
func (*AppGroups) ProtoMessage()               {}
func (*AppGroups) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *AppGroups) GetGroups() []*AppGroup {
	if m != nil {
		return m.Groups
	}
	return nil
}

func init() {
	proto.RegisterType((*AppRequest)(nil), "apps.AppRequest")
	proto.RegisterType((*AppsRetrieveRequest)(nil), "apps.AppsRetrieveRequest")
	proto.RegisterType((*AppSummaryResponse)(nil), "apps.AppSummaryResponse")
	proto.RegisterType((*AppResponse)(nil), "apps.AppResponse")
	proto.RegisterType((*AppSummariesResponse)(nil), "apps.AppSummariesResponse")
	proto.RegisterType((*AppsResponse)(nil), "apps.AppsResponse")
	proto.RegisterType((*AppListRequest)(nil), "apps.AppListRequest")
	proto.RegisterType((*AppRegisterRequest)(nil), "apps.AppRegisterRequest")
	proto.RegisterType((*AppRegisterResponse)(nil), "apps.AppRegisterResponse")
	proto.RegisterType((*AppUpdateResponse)(nil), "apps.AppUpdateResponse")
	proto.RegisterType((*AppGroup)(nil), "apps.AppGroup")
	proto.RegisterType((*AppGroups)(nil), "apps.AppGroups")
	proto.RegisterEnum("apps.AppRelease", AppRelease_name, AppRelease_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Apps service

type AppsClient interface {
	Mutate(ctx context.Context, in *AppRegisterRequest, opts ...grpc.CallOption) (*AppRegisterResponse, error)
	DeRegister(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*AppUpdateResponse, error)
	RetrieveApp(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*AppResponse, error)
	List(ctx context.Context, in *AppListRequest, opts ...grpc.CallOption) (*AppsResponse, error)
	RetrieveApps(ctx context.Context, in *AppsRetrieveRequest, opts ...grpc.CallOption) (*AppSummariesResponse, error)
	RetrieveGroups(ctx context.Context, in *AppsRetrieveRequest, opts ...grpc.CallOption) (*AppGroups, error)
}

type appsClient struct {
	cc *grpc.ClientConn
}

func NewAppsClient(cc *grpc.ClientConn) AppsClient {
	return &appsClient{cc}
}

func (c *appsClient) Mutate(ctx context.Context, in *AppRegisterRequest, opts ...grpc.CallOption) (*AppRegisterResponse, error) {
	out := new(AppRegisterResponse)
	err := grpc.Invoke(ctx, "/apps.Apps/Mutate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appsClient) DeRegister(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*AppUpdateResponse, error) {
	out := new(AppUpdateResponse)
	err := grpc.Invoke(ctx, "/apps.Apps/DeRegister", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appsClient) RetrieveApp(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*AppResponse, error) {
	out := new(AppResponse)
	err := grpc.Invoke(ctx, "/apps.Apps/RetrieveApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appsClient) List(ctx context.Context, in *AppListRequest, opts ...grpc.CallOption) (*AppsResponse, error) {
	out := new(AppsResponse)
	err := grpc.Invoke(ctx, "/apps.Apps/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appsClient) RetrieveApps(ctx context.Context, in *AppsRetrieveRequest, opts ...grpc.CallOption) (*AppSummariesResponse, error) {
	out := new(AppSummariesResponse)
	err := grpc.Invoke(ctx, "/apps.Apps/RetrieveApps", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appsClient) RetrieveGroups(ctx context.Context, in *AppsRetrieveRequest, opts ...grpc.CallOption) (*AppGroups, error) {
	out := new(AppGroups)
	err := grpc.Invoke(ctx, "/apps.Apps/RetrieveGroups", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Apps service

type AppsServer interface {
	Mutate(context.Context, *AppRegisterRequest) (*AppRegisterResponse, error)
	DeRegister(context.Context, *AppRequest) (*AppUpdateResponse, error)
	RetrieveApp(context.Context, *AppRequest) (*AppResponse, error)
	List(context.Context, *AppListRequest) (*AppsResponse, error)
	RetrieveApps(context.Context, *AppsRetrieveRequest) (*AppSummariesResponse, error)
	RetrieveGroups(context.Context, *AppsRetrieveRequest) (*AppGroups, error)
}

func RegisterAppsServer(s *grpc.Server, srv AppsServer) {
	s.RegisterService(&_Apps_serviceDesc, srv)
}

func _Apps_Mutate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).Mutate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/Mutate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).Mutate(ctx, req.(*AppRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apps_DeRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).DeRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/DeRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).DeRegister(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apps_RetrieveApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).RetrieveApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/RetrieveApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).RetrieveApp(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apps_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).List(ctx, req.(*AppListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apps_RetrieveApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppsRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).RetrieveApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/RetrieveApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).RetrieveApps(ctx, req.(*AppsRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apps_RetrieveGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppsRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).RetrieveGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/RetrieveGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).RetrieveGroups(ctx, req.(*AppsRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Apps_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apps.Apps",
	HandlerType: (*AppsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mutate",
			Handler:    _Apps_Mutate_Handler,
		},
		{
			MethodName: "DeRegister",
			Handler:    _Apps_DeRegister_Handler,
		},
		{
			MethodName: "RetrieveApp",
			Handler:    _Apps_RetrieveApp_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Apps_List_Handler,
		},
		{
			MethodName: "RetrieveApps",
			Handler:    _Apps_RetrieveApps_Handler,
		},
		{
			MethodName: "RetrieveGroups",
			Handler:    _Apps_RetrieveGroups_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apps.proto",
}

func init() { proto.RegisterFile("apps.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 775 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x2e, 0xf5, 0x43, 0x91, 0x23, 0x59, 0x96, 0xb7, 0x06, 0xbc, 0x56, 0x81, 0x56, 0x25, 0xd0,
	0x56, 0x30, 0x5a, 0xbb, 0xb0, 0x51, 0xf4, 0xe2, 0x1e, 0xe8, 0x5a, 0x68, 0x0b, 0xd8, 0x80, 0x41,
	0xbb, 0x87, 0x1a, 0x28, 0x04, 0x8a, 0x1c, 0xab, 0xdb, 0x50, 0xdc, 0x0d, 0xb9, 0x34, 0xa2, 0x3c,
	0x41, 0x1e, 0x32, 0x2f, 0x90, 0x63, 0xde, 0x20, 0xe0, 0xf2, 0x47, 0xd4, 0x4f, 0x12, 0x47, 0x87,
	0xdc, 0x76, 0xbe, 0x99, 0xd9, 0xd9, 0xe1, 0x7c, 0xdf, 0x10, 0xc0, 0x15, 0x22, 0x3e, 0x16, 0x11,
	0x97, 0x9c, 0x34, 0xd2, 0xb3, 0xf5, 0x4a, 0x03, 0xb0, 0x85, 0x70, 0xf0, 0x79, 0x82, 0xb1, 0x24,
	0x5f, 0x81, 0xf9, 0x88, 0xa1, 0xcf, 0xa3, 0x31, 0xf3, 0xa9, 0x36, 0xd0, 0x86, 0xa6, 0x63, 0x64,
	0xc0, 0x5f, 0x3e, 0xe9, 0x42, 0x8d, 0xf9, 0xb4, 0xa6, 0xd0, 0x1a, 0xf3, 0xc9, 0xb7, 0xd0, 0x61,
	0xa1, 0x17, 0x24, 0x3e, 0x8e, 0xe7, 0xee, 0x2c, 0xa0, 0xf5, 0x81, 0x36, 0x34, 0x9c, 0x76, 0x8e,
	0xfd, 0xe3, 0xce, 0x02, 0x72, 0x04, 0xad, 0x08, 0x03, 0x74, 0x63, 0xa4, 0x8d, 0x81, 0x36, 0xec,
	0x9e, 0xf6, 0x8e, 0xd5, 0x13, 0x54, 0x49, 0x85, 0x3b, 0x45, 0x80, 0xf5, 0x2f, 0x7c, 0x69, 0x0b,
	0x11, 0x3b, 0x28, 0x23, 0x86, 0x8f, 0x58, 0x3c, 0x49, 0x5d, 0xa1, 0x8e, 0x54, 0x1b, 0xd4, 0x87,
	0xed, 0xa5, 0x2b, 0x14, 0xee, 0x14, 0x01, 0xa4, 0x0f, 0x46, 0xe0, 0x86, 0xd3, 0xc4, 0x9d, 0x62,
	0xfe, 0xce, 0xd2, 0xb6, 0xde, 0xd6, 0x80, 0xd8, 0x42, 0xdc, 0x26, 0xb3, 0x99, 0x1b, 0xcd, 0x1d,
	0x8c, 0x05, 0x0f, 0x63, 0xfc, 0xb4, 0x8e, 0x09, 0x34, 0x42, 0x77, 0x86, 0xaa, 0x53, 0xd3, 0x51,
	0x67, 0x32, 0x80, 0xb6, 0x8f, 0xb1, 0x17, 0x31, 0x21, 0x19, 0x0f, 0x55, 0x9b, 0xa6, 0x53, 0x85,
	0xd2, 0x57, 0x79, 0xae, 0xc4, 0x29, 0x8f, 0xe6, 0xb4, 0x99, 0x55, 0x28, 0x6c, 0xb2, 0x0f, 0xcd,
	0x69, 0xc4, 0x13, 0x41, 0x75, 0xe5, 0xc8, 0x8c, 0xb4, 0x0e, 0xf3, 0x78, 0x48, 0x5b, 0x59, 0x9d,
	0xf4, 0x4c, 0x0e, 0xc1, 0x70, 0x85, 0x18, 0xcb, 0xb9, 0x40, 0x6a, 0x28, 0xbc, 0xe5, 0x0a, 0x71,
	0x37, 0x17, 0x48, 0x0e, 0xa0, 0x95, 0xb0, 0xf1, 0x8c, 0xfb, 0x48, 0x4d, 0xe5, 0xd1, 0x13, 0x76,
	0xcd, 0x7d, 0x4c, 0x6f, 0xf7, 0x78, 0xc0, 0x23, 0x0a, 0xd9, 0xed, 0xca, 0x48, 0x5f, 0xcc, 0xc2,
	0x58, 0xba, 0x41, 0xe0, 0x4e, 0x02, 0xa4, 0xed, 0x62, 0x6c, 0x25, 0x54, 0x1d, 0x5b, 0xe7, 0x23,
	0x63, 0x4b, 0xbb, 0x13, 0x11, 0xe3, 0x11, 0x93, 0x73, 0xba, 0x33, 0xd0, 0x86, 0x4d, 0xa7, 0xb4,
	0x2d, 0x0f, 0xda, 0x2a, 0x65, 0x9b, 0x6f, 0xfd, 0x03, 0xec, 0xfa, 0xf8, 0xc0, 0x42, 0x96, 0x7e,
	0xc3, 0x05, 0xc1, 0x4c, 0xa7, 0xbb, 0x80, 0x53, 0x8e, 0x59, 0x97, 0xb0, 0x5f, 0xce, 0x95, 0x61,
	0x5c, 0x56, 0xfb, 0x11, 0x14, 0xc5, 0x73, 0xd6, 0xd0, 0xb2, 0x83, 0x15, 0x06, 0x38, 0x99, 0x10,
	0x7e, 0x81, 0x4e, 0xc6, 0xbe, 0x3c, 0xfb, 0xbb, 0xa5, 0xec, 0xbd, 0x4a, 0xff, 0x4b, 0x69, 0x2f,
	0xa1, 0x6b, 0x0b, 0x71, 0xc5, 0x62, 0xf9, 0x24, 0x09, 0xad, 0x4a, 0xa6, 0xb6, 0x2e, 0x99, 0x21,
	0xe8, 0x0f, 0x2c, 0x90, 0x18, 0xd1, 0xfa, 0x7b, 0xe8, 0x9e, 0xfb, 0xad, 0xff, 0x15, 0xa1, 0x1d,
	0x9c, 0xb2, 0x58, 0x62, 0xb4, 0x95, 0x84, 0x9f, 0xfc, 0x91, 0x3d, 0x25, 0xce, 0x45, 0xad, 0x6d,
	0x26, 0xfa, 0x0d, 0xb4, 0x31, 0x94, 0x4c, 0xce, 0xc7, 0x5e, 0x4a, 0xd5, 0xac, 0x10, 0x64, 0xd0,
	0xef, 0xdc, 0x47, 0xeb, 0x1e, 0xf6, 0x6c, 0x21, 0xfe, 0x16, 0xbe, 0x2b, 0x71, 0xbb, 0x12, 0x14,
	0x5a, 0x89, 0x4a, 0xf7, 0xf3, 0x6d, 0x54, 0x98, 0xd6, 0x6b, 0x0d, 0x0c, 0x5b, 0x88, 0x3f, 0x94,
	0xbe, 0x3e, 0x83, 0xe8, 0x0b, 0x09, 0x37, 0x2b, 0x12, 0xae, 0x2e, 0x02, 0x7d, 0x7d, 0x11, 0x64,
	0x52, 0x6d, 0x55, 0xa5, 0xba, 0x61, 0x3e, 0xc6, 0xc6, 0xf9, 0x9c, 0x81, 0x59, 0x74, 0x17, 0x93,
	0xef, 0x41, 0x57, 0x7b, 0xa4, 0x60, 0x6f, 0xb7, 0xa4, 0x90, 0x0a, 0x70, 0x72, 0xef, 0xd1, 0x79,
	0xbe, 0xfb, 0x33, 0x21, 0x03, 0xe8, 0xb7, 0x77, 0xf6, 0xc5, 0xd5, 0xa8, 0xf7, 0x05, 0x31, 0xa0,
	0x71, 0x31, 0xba, 0xb3, 0x7b, 0x1a, 0x31, 0xa1, 0x69, 0x5f, 0xdd, 0xfc, 0x69, 0xf7, 0x6a, 0x64,
	0x07, 0xcc, 0x1b, 0x67, 0x34, 0xce, 0xcc, 0xfa, 0xe9, 0x9b, 0x1a, 0x34, 0x52, 0xc9, 0x90, 0xdf,
	0x40, 0xbf, 0x4e, 0xa4, 0x2b, 0x91, 0xd0, 0x0a, 0x57, 0x97, 0x58, 0xd9, 0x3f, 0xdc, 0xe0, 0xc9,
	0x07, 0xfc, 0x2b, 0xc0, 0x25, 0x16, 0x28, 0x59, 0xa3, 0x7b, 0xff, 0xa0, 0x44, 0x56, 0x98, 0x71,
	0x0a, 0xed, 0xe2, 0x67, 0x61, 0x0b, 0xb1, 0x21, 0x73, 0x5d, 0xb5, 0xe4, 0x67, 0x68, 0xa4, 0x62,
	0x25, 0xfb, 0xa5, 0xab, 0xa2, 0xdd, 0x3e, 0x29, 0xd1, 0xc5, 0x22, 0x18, 0x41, 0xa7, 0x52, 0x25,
	0x26, 0x87, 0xd5, 0x98, 0xa5, 0x5f, 0x55, 0xbf, 0xbf, 0xb2, 0x63, 0xaa, 0xdb, 0xe8, 0x1c, 0xba,
	0x45, 0x78, 0x3e, 0xa5, 0x0f, 0x5c, 0xb4, 0xbb, 0x3c, 0xb0, 0xf8, 0x62, 0x70, 0xff, 0xf5, 0x94,
	0xc9, 0xff, 0x92, 0xc9, 0xb1, 0xc7, 0x67, 0x27, 0xcf, 0x92, 0x09, 0xbe, 0x38, 0x51, 0xbf, 0xf1,
	0x9f, 0xa6, 0xfc, 0x24, 0x8d, 0x9d, 0xe8, 0xca, 0x3c, 0x7b, 0x17, 0x00, 0x00, 0xff, 0xff, 0x98,
	0x0f, 0x63, 0x76, 0xe3, 0x07, 0x00, 0x00,
}

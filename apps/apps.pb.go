// Code generated by protoc-gen-go.
// source: apps.proto
// DO NOT EDIT!

/*
Package apps is a generated protocol buffer package.

Storage of applications

It is generated from these files:
	apps.proto

It has these top-level messages:
	AppRequest
	AppsRetrieveRequest
	AppSummaryResponse
	AppResponse
	AppSummariesResponse
	AppsResponse
	AppListRequest
	AppRegisterRequest
	AppRegisterResponse
	AppUpdateRequest
	AppUpdateResponse
*/
package apps

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AppRequest struct {
	VendorId    string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	IncludeYaml bool   `protobuf:"varint,3,opt,name=include_yaml,json=includeYaml" json:"include_yaml,omitempty"`
}

func (m *AppRequest) Reset()                    { *m = AppRequest{} }
func (m *AppRequest) String() string            { return proto.CompactTextString(m) }
func (*AppRequest) ProtoMessage()               {}
func (*AppRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AppRequest) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppRequest) GetIncludeYaml() bool {
	if m != nil {
		return m.IncludeYaml
	}
	return false
}

type AppsRetrieveRequest struct {
	Request  []*AppRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
	Language string        `protobuf:"bytes,2,opt,name=language" json:"language,omitempty"`
}

func (m *AppsRetrieveRequest) Reset()                    { *m = AppsRetrieveRequest{} }
func (m *AppsRetrieveRequest) String() string            { return proto.CompactTextString(m) }
func (*AppsRetrieveRequest) ProtoMessage()               {}
func (*AppsRetrieveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AppsRetrieveRequest) GetRequest() []*AppRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *AppsRetrieveRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type AppSummaryResponse struct {
	VendorId    string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Category    string `protobuf:"bytes,5,opt,name=category" json:"category,omitempty"`
	Group       string `protobuf:"bytes,6,opt,name=group" json:"group,omitempty"`
	Icon        string `protobuf:"bytes,7,opt,name=icon" json:"icon,omitempty"`
	AppType     string `protobuf:"bytes,8,opt,name=app_type,json=appType" json:"app_type,omitempty"`
	UiMode      string `protobuf:"bytes,9,opt,name=ui_mode,json=uiMode" json:"ui_mode,omitempty"`
	Color       string `protobuf:"bytes,10,opt,name=color" json:"color,omitempty"`
	Installable bool   `protobuf:"varint,11,opt,name=installable" json:"installable,omitempty"`
}

func (m *AppSummaryResponse) Reset()                    { *m = AppSummaryResponse{} }
func (m *AppSummaryResponse) String() string            { return proto.CompactTextString(m) }
func (*AppSummaryResponse) ProtoMessage()               {}
func (*AppSummaryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AppSummaryResponse) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppSummaryResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppSummaryResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AppSummaryResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AppSummaryResponse) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *AppSummaryResponse) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *AppSummaryResponse) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *AppSummaryResponse) GetAppType() string {
	if m != nil {
		return m.AppType
	}
	return ""
}

func (m *AppSummaryResponse) GetUiMode() string {
	if m != nil {
		return m.UiMode
	}
	return ""
}

func (m *AppSummaryResponse) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *AppSummaryResponse) GetInstallable() bool {
	if m != nil {
		return m.Installable
	}
	return false
}

type AppResponse struct {
	VendorId       string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id             string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	DefinitionYaml string `protobuf:"bytes,3,opt,name=definition_yaml,json=definitionYaml" json:"definition_yaml,omitempty"`
}

func (m *AppResponse) Reset()                    { *m = AppResponse{} }
func (m *AppResponse) String() string            { return proto.CompactTextString(m) }
func (*AppResponse) ProtoMessage()               {}
func (*AppResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AppResponse) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppResponse) GetDefinitionYaml() string {
	if m != nil {
		return m.DefinitionYaml
	}
	return ""
}

type AppSummariesResponse struct {
	Apps []*AppSummaryResponse `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
}

func (m *AppSummariesResponse) Reset()                    { *m = AppSummariesResponse{} }
func (m *AppSummariesResponse) String() string            { return proto.CompactTextString(m) }
func (*AppSummariesResponse) ProtoMessage()               {}
func (*AppSummariesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AppSummariesResponse) GetApps() []*AppSummaryResponse {
	if m != nil {
		return m.Apps
	}
	return nil
}

type AppsResponse struct {
	Apps []*AppResponse `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
}

func (m *AppsResponse) Reset()                    { *m = AppsResponse{} }
func (m *AppsResponse) String() string            { return proto.CompactTextString(m) }
func (*AppsResponse) ProtoMessage()               {}
func (*AppsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AppsResponse) GetApps() []*AppResponse {
	if m != nil {
		return m.Apps
	}
	return nil
}

type AppListRequest struct {
	VendorId    string        `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	IncludeYaml bool          `protobuf:"varint,2,opt,name=include_yaml,json=includeYaml" json:"include_yaml,omitempty"`
	Filter      []*AppRequest `protobuf:"bytes,3,rep,name=filter" json:"filter,omitempty"`
}

func (m *AppListRequest) Reset()                    { *m = AppListRequest{} }
func (m *AppListRequest) String() string            { return proto.CompactTextString(m) }
func (*AppListRequest) ProtoMessage()               {}
func (*AppListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AppListRequest) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppListRequest) GetIncludeYaml() bool {
	if m != nil {
		return m.IncludeYaml
	}
	return false
}

func (m *AppListRequest) GetFilter() []*AppRequest {
	if m != nil {
		return m.Filter
	}
	return nil
}

type AppRegisterRequest struct {
	VendorId       string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id             string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	VendorSecret   string `protobuf:"bytes,3,opt,name=vendor_secret,json=vendorSecret" json:"vendor_secret,omitempty"`
	DefinitionYaml string `protobuf:"bytes,4,opt,name=definition_yaml,json=definitionYaml" json:"definition_yaml,omitempty"`
}

func (m *AppRegisterRequest) Reset()                    { *m = AppRegisterRequest{} }
func (m *AppRegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*AppRegisterRequest) ProtoMessage()               {}
func (*AppRegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AppRegisterRequest) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppRegisterRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppRegisterRequest) GetVendorSecret() string {
	if m != nil {
		return m.VendorSecret
	}
	return ""
}

func (m *AppRegisterRequest) GetDefinitionYaml() string {
	if m != nil {
		return m.DefinitionYaml
	}
	return ""
}

type AppRegisterResponse struct {
	VendorId   string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id         string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	EntityCode string `protobuf:"bytes,3,opt,name=entity_code,json=entityCode" json:"entity_code,omitempty"`
}

func (m *AppRegisterResponse) Reset()                    { *m = AppRegisterResponse{} }
func (m *AppRegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*AppRegisterResponse) ProtoMessage()               {}
func (*AppRegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AppRegisterResponse) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppRegisterResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppRegisterResponse) GetEntityCode() string {
	if m != nil {
		return m.EntityCode
	}
	return ""
}

type AppUpdateRequest struct {
	VendorId       string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id             string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	DefinitionYaml string `protobuf:"bytes,3,opt,name=definition_yaml,json=definitionYaml" json:"definition_yaml,omitempty"`
}

func (m *AppUpdateRequest) Reset()                    { *m = AppUpdateRequest{} }
func (m *AppUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*AppUpdateRequest) ProtoMessage()               {}
func (*AppUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AppUpdateRequest) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppUpdateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppUpdateRequest) GetDefinitionYaml() string {
	if m != nil {
		return m.DefinitionYaml
	}
	return ""
}

type AppUpdateResponse struct {
	VendorId string `protobuf:"bytes,1,opt,name=vendor_id,json=vendorId" json:"vendor_id,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Updated  bool   `protobuf:"varint,3,opt,name=updated" json:"updated,omitempty"`
}

func (m *AppUpdateResponse) Reset()                    { *m = AppUpdateResponse{} }
func (m *AppUpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*AppUpdateResponse) ProtoMessage()               {}
func (*AppUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AppUpdateResponse) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *AppUpdateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AppUpdateResponse) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

func init() {
	proto.RegisterType((*AppRequest)(nil), "apps.AppRequest")
	proto.RegisterType((*AppsRetrieveRequest)(nil), "apps.AppsRetrieveRequest")
	proto.RegisterType((*AppSummaryResponse)(nil), "apps.AppSummaryResponse")
	proto.RegisterType((*AppResponse)(nil), "apps.AppResponse")
	proto.RegisterType((*AppSummariesResponse)(nil), "apps.AppSummariesResponse")
	proto.RegisterType((*AppsResponse)(nil), "apps.AppsResponse")
	proto.RegisterType((*AppListRequest)(nil), "apps.AppListRequest")
	proto.RegisterType((*AppRegisterRequest)(nil), "apps.AppRegisterRequest")
	proto.RegisterType((*AppRegisterResponse)(nil), "apps.AppRegisterResponse")
	proto.RegisterType((*AppUpdateRequest)(nil), "apps.AppUpdateRequest")
	proto.RegisterType((*AppUpdateResponse)(nil), "apps.AppUpdateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Apps service

type AppsClient interface {
	Register(ctx context.Context, in *AppRegisterRequest, opts ...grpc.CallOption) (*AppRegisterResponse, error)
	DeRegister(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*AppUpdateResponse, error)
	Update(ctx context.Context, in *AppUpdateRequest, opts ...grpc.CallOption) (*AppUpdateResponse, error)
	RetrieveApp(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*AppResponse, error)
	List(ctx context.Context, in *AppListRequest, opts ...grpc.CallOption) (*AppsResponse, error)
	RetrieveApps(ctx context.Context, in *AppsRetrieveRequest, opts ...grpc.CallOption) (*AppSummariesResponse, error)
}

type appsClient struct {
	cc *grpc.ClientConn
}

func NewAppsClient(cc *grpc.ClientConn) AppsClient {
	return &appsClient{cc}
}

func (c *appsClient) Register(ctx context.Context, in *AppRegisterRequest, opts ...grpc.CallOption) (*AppRegisterResponse, error) {
	out := new(AppRegisterResponse)
	err := grpc.Invoke(ctx, "/apps.Apps/Register", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appsClient) DeRegister(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*AppUpdateResponse, error) {
	out := new(AppUpdateResponse)
	err := grpc.Invoke(ctx, "/apps.Apps/DeRegister", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appsClient) Update(ctx context.Context, in *AppUpdateRequest, opts ...grpc.CallOption) (*AppUpdateResponse, error) {
	out := new(AppUpdateResponse)
	err := grpc.Invoke(ctx, "/apps.Apps/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appsClient) RetrieveApp(ctx context.Context, in *AppRequest, opts ...grpc.CallOption) (*AppResponse, error) {
	out := new(AppResponse)
	err := grpc.Invoke(ctx, "/apps.Apps/RetrieveApp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appsClient) List(ctx context.Context, in *AppListRequest, opts ...grpc.CallOption) (*AppsResponse, error) {
	out := new(AppsResponse)
	err := grpc.Invoke(ctx, "/apps.Apps/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appsClient) RetrieveApps(ctx context.Context, in *AppsRetrieveRequest, opts ...grpc.CallOption) (*AppSummariesResponse, error) {
	out := new(AppSummariesResponse)
	err := grpc.Invoke(ctx, "/apps.Apps/RetrieveApps", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Apps service

type AppsServer interface {
	Register(context.Context, *AppRegisterRequest) (*AppRegisterResponse, error)
	DeRegister(context.Context, *AppRequest) (*AppUpdateResponse, error)
	Update(context.Context, *AppUpdateRequest) (*AppUpdateResponse, error)
	RetrieveApp(context.Context, *AppRequest) (*AppResponse, error)
	List(context.Context, *AppListRequest) (*AppsResponse, error)
	RetrieveApps(context.Context, *AppsRetrieveRequest) (*AppSummariesResponse, error)
}

func RegisterAppsServer(s *grpc.Server, srv AppsServer) {
	s.RegisterService(&_Apps_serviceDesc, srv)
}

func _Apps_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).Register(ctx, req.(*AppRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apps_DeRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).DeRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/DeRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).DeRegister(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apps_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).Update(ctx, req.(*AppUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apps_RetrieveApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).RetrieveApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/RetrieveApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).RetrieveApp(ctx, req.(*AppRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apps_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).List(ctx, req.(*AppListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apps_RetrieveApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppsRetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).RetrieveApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apps.Apps/RetrieveApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).RetrieveApps(ctx, req.(*AppsRetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Apps_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apps.Apps",
	HandlerType: (*AppsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _Apps_Register_Handler,
		},
		{
			MethodName: "DeRegister",
			Handler:    _Apps_DeRegister_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Apps_Update_Handler,
		},
		{
			MethodName: "RetrieveApp",
			Handler:    _Apps_RetrieveApp_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Apps_List_Handler,
		},
		{
			MethodName: "RetrieveApps",
			Handler:    _Apps_RetrieveApps_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apps.proto",
}

func init() { proto.RegisterFile("apps.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 649 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x55, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x55, 0xd2, 0x34, 0x97, 0x71, 0x28, 0xed, 0x52, 0xd1, 0x6d, 0x90, 0x20, 0x04, 0x21, 0x22,
	0x04, 0x2d, 0x0a, 0x42, 0x88, 0x27, 0x14, 0x28, 0x0f, 0x48, 0xf0, 0xe2, 0xc2, 0x03, 0x15, 0x28,
	0x72, 0xbc, 0x53, 0x77, 0x85, 0xed, 0x1d, 0xec, 0x75, 0x45, 0xf8, 0x09, 0xbe, 0x83, 0x3f, 0xe3,
	0x33, 0x90, 0xd7, 0x97, 0x38, 0x17, 0x44, 0xc9, 0xdb, 0xce, 0x99, 0x1d, 0x9f, 0xd9, 0x3d, 0x67,
	0xd6, 0x00, 0x0e, 0x51, 0x7c, 0x44, 0x91, 0xd2, 0x8a, 0x35, 0xd2, 0xf5, 0xe0, 0x33, 0xc0, 0x98,
	0xc8, 0xc6, 0x6f, 0x09, 0xc6, 0x9a, 0xdd, 0x82, 0xce, 0x25, 0x86, 0x42, 0x45, 0x13, 0x29, 0x78,
	0xad, 0x5f, 0x1b, 0x76, 0xec, 0x76, 0x06, 0xbc, 0x15, 0x6c, 0x07, 0xea, 0x52, 0xf0, 0xba, 0x41,
	0xeb, 0x52, 0xb0, 0xbb, 0xd0, 0x95, 0xa1, 0xeb, 0x27, 0x02, 0x27, 0x33, 0x27, 0xf0, 0xf9, 0x56,
	0xbf, 0x36, 0x6c, 0xdb, 0x56, 0x8e, 0x7d, 0x72, 0x02, 0x7f, 0xf0, 0x05, 0x6e, 0x8c, 0x89, 0x62,
	0x1b, 0x75, 0x24, 0xf1, 0x12, 0x0b, 0x9a, 0x87, 0xd0, 0x8a, 0xb2, 0x25, 0xaf, 0xf5, 0xb7, 0x86,
	0xd6, 0x68, 0xf7, 0xc8, 0x34, 0x36, 0xef, 0xc4, 0x2e, 0x36, 0xb0, 0x1e, 0xb4, 0x7d, 0x27, 0xf4,
	0x12, 0xc7, 0xc3, 0x9c, 0xbb, 0x8c, 0x07, 0xbf, 0xea, 0xc0, 0xc6, 0x44, 0xa7, 0x49, 0x10, 0x38,
	0xd1, 0xcc, 0xc6, 0x98, 0x54, 0x18, 0xe3, 0xff, 0x9d, 0x82, 0x41, 0x23, 0x74, 0x02, 0x34, 0xdd,
	0x77, 0x6c, 0xb3, 0x66, 0x7d, 0xb0, 0x04, 0xc6, 0x6e, 0x24, 0x49, 0x4b, 0x15, 0xf2, 0x86, 0x49,
	0x55, 0xa1, 0xb4, 0x2b, 0xd7, 0xd1, 0xe8, 0xa9, 0x68, 0xc6, 0xb7, 0x33, 0x86, 0x22, 0x66, 0xfb,
	0xb0, 0xed, 0x45, 0x2a, 0x21, 0xde, 0x34, 0x89, 0x2c, 0x48, 0x79, 0xa4, 0xab, 0x42, 0xde, 0xca,
	0x78, 0xd2, 0x35, 0x3b, 0x84, 0xb6, 0x43, 0x34, 0xd1, 0x33, 0x42, 0xde, 0x36, 0x78, 0xcb, 0x21,
	0xfa, 0x30, 0x23, 0x64, 0x07, 0xd0, 0x4a, 0xe4, 0x24, 0x50, 0x02, 0x79, 0xc7, 0x64, 0x9a, 0x89,
	0x7c, 0xaf, 0x04, 0xa6, 0x5f, 0x77, 0x95, 0xaf, 0x22, 0x0e, 0xd9, 0xd7, 0x4d, 0x90, 0x76, 0x2c,
	0xc3, 0x58, 0x3b, 0xbe, 0xef, 0x4c, 0x7d, 0xe4, 0x56, 0x21, 0x45, 0x09, 0x0d, 0x5c, 0xb0, 0xcc,
	0xf5, 0x6e, 0x72, 0x47, 0x0f, 0xe0, 0xba, 0xc0, 0x73, 0x19, 0xca, 0xf4, 0xec, 0x73, 0xb1, 0x3b,
	0xf6, 0xce, 0x1c, 0x36, 0x7a, 0x9f, 0xc0, 0x7e, 0xa9, 0x87, 0xc4, 0xb8, 0x64, 0x7b, 0x04, 0xc6,
	0x6d, 0xb9, 0xda, 0xbc, 0x54, 0x7b, 0x49, 0x39, 0x3b, 0xf3, 0xe4, 0x33, 0xe8, 0x66, 0xae, 0xc9,
	0xab, 0xef, 0x2f, 0x54, 0xef, 0x55, 0xbc, 0xb2, 0x50, 0xf6, 0x03, 0x76, 0xc6, 0x44, 0xef, 0x64,
	0xac, 0xaf, 0x64, 0xe7, 0x65, 0xfb, 0xd6, 0x57, 0xec, 0xcb, 0x86, 0xd0, 0x3c, 0x97, 0xbe, 0xc6,
	0x88, 0x6f, 0xfd, 0xc5, 0xa6, 0x79, 0x7e, 0xf0, 0xb3, 0x66, 0x9c, 0x68, 0xa3, 0x27, 0x63, 0x8d,
	0xd1, 0x46, 0xf3, 0x74, 0x0f, 0xae, 0xe5, 0x9b, 0x63, 0x74, 0x23, 0xd4, 0xf9, 0x1d, 0x77, 0x33,
	0xf0, 0xd4, 0x60, 0xeb, 0xa4, 0x68, 0xac, 0x95, 0xc2, 0x35, 0xa3, 0x37, 0x6f, 0x68, 0x13, 0xdd,
	0xef, 0x80, 0x85, 0xa1, 0x96, 0x7a, 0x36, 0x71, 0x53, 0x23, 0x66, 0xfd, 0x40, 0x06, 0xbd, 0x56,
	0x02, 0x07, 0x17, 0xb0, 0x3b, 0x26, 0xfa, 0x48, 0xc2, 0xd1, 0xb8, 0xd1, 0x99, 0xaf, 0xec, 0xac,
	0x33, 0xd8, 0xab, 0x30, 0x6d, 0x72, 0x18, 0x0e, 0xad, 0xc4, 0x94, 0x8b, 0xfc, 0xa5, 0x2a, 0xc2,
	0xd1, 0xef, 0x3a, 0x34, 0x52, 0xc3, 0xb1, 0x97, 0xd0, 0x2e, 0x2e, 0x8c, 0xf1, 0x8a, 0xd6, 0x0b,
	0xa2, 0xf6, 0x0e, 0xd7, 0x64, 0xf2, 0x86, 0x9e, 0x03, 0x9c, 0x60, 0xf9, 0x89, 0x15, 0xbb, 0xf4,
	0x0e, 0x4a, 0x64, 0xe9, 0x24, 0x2f, 0xa0, 0x99, 0x21, 0xec, 0xe6, 0xca, 0x96, 0x7f, 0x94, 0x8e,
	0xc0, 0x2a, 0xde, 0xd7, 0x31, 0xd1, 0x1a, 0xd2, 0xd5, 0x81, 0x61, 0x4f, 0xa0, 0x91, 0xce, 0x09,
	0xdb, 0x2f, 0x53, 0x95, 0xb1, 0xe9, 0xb1, 0x12, 0x9d, 0xcf, 0xe0, 0x1b, 0xe8, 0x56, 0x58, 0x62,
	0x76, 0x58, 0xdd, 0xb3, 0xf0, 0xba, 0xf7, 0x7a, 0x4b, 0xe3, 0x5d, 0x79, 0x08, 0x5e, 0xf5, 0xcf,
	0x6e, 0x7b, 0x52, 0x5f, 0x24, 0xd3, 0x23, 0x57, 0x05, 0xc7, 0x5f, 0x93, 0x29, 0x7e, 0x3f, 0x36,
	0xbf, 0xa3, 0xc7, 0x9e, 0x3a, 0x4e, 0xcb, 0xa6, 0x4d, 0x13, 0x3e, 0xfd, 0x13, 0x00, 0x00, 0xff,
	0xff, 0x8c, 0xcb, 0x12, 0xa6, 0xab, 0x06, 0x00, 0x00,
}

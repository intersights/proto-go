// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vendors.proto

/*
Package vendors is a generated protocol buffer package.

Storage of applications

It is generated from these files:
	vendors.proto

It has these top-level messages:
	RetrieveRequest
	RegisterRequest
	RegisterResponse
	Response
	UpdateRequest
	ListRequest
	UpdateResponse
	VendorsResponse
*/
package vendors

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RetrieveRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *RetrieveRequest) Reset()                    { *m = RetrieveRequest{} }
func (m *RetrieveRequest) String() string            { return proto.CompactTextString(m) }
func (*RetrieveRequest) ProtoMessage()               {}
func (*RetrieveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RetrieveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RegisterRequest struct {
	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *RegisterRequest) Reset()                    { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()               {}
func (*RegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegisterRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *RegisterRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RegisterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegisterRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type RegisterResponse struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	EntityCode string `protobuf:"bytes,2,opt,name=entity_code,json=entityCode" json:"entity_code,omitempty"`
	Secret     string `protobuf:"bytes,3,opt,name=secret" json:"secret,omitempty"`
}

func (m *RegisterResponse) Reset()                    { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()               {}
func (*RegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RegisterResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RegisterResponse) GetEntityCode() string {
	if m != nil {
		return m.EntityCode
	}
	return ""
}

func (m *RegisterResponse) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type Response struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Response) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Response) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type UpdateRequest struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ListRequest struct {
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type UpdateResponse struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Updated bool   `protobuf:"varint,2,opt,name=updated" json:"updated,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateResponse) GetUpdated() bool {
	if m != nil {
		return m.Updated
	}
	return false
}

type VendorsResponse struct {
	Vendors []*Response `protobuf:"bytes,1,rep,name=vendors" json:"vendors,omitempty"`
}

func (m *VendorsResponse) Reset()                    { *m = VendorsResponse{} }
func (m *VendorsResponse) String() string            { return proto.CompactTextString(m) }
func (*VendorsResponse) ProtoMessage()               {}
func (*VendorsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *VendorsResponse) GetVendors() []*Response {
	if m != nil {
		return m.Vendors
	}
	return nil
}

func init() {
	proto.RegisterType((*RetrieveRequest)(nil), "vendors.RetrieveRequest")
	proto.RegisterType((*RegisterRequest)(nil), "vendors.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "vendors.RegisterResponse")
	proto.RegisterType((*Response)(nil), "vendors.Response")
	proto.RegisterType((*UpdateRequest)(nil), "vendors.UpdateRequest")
	proto.RegisterType((*ListRequest)(nil), "vendors.ListRequest")
	proto.RegisterType((*UpdateResponse)(nil), "vendors.UpdateResponse")
	proto.RegisterType((*VendorsResponse)(nil), "vendors.VendorsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Vendors service

type VendorsClient interface {
	Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (*Response, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*VendorsResponse, error)
}

type vendorsClient struct {
	cc *grpc.ClientConn
}

func NewVendorsClient(cc *grpc.ClientConn) VendorsClient {
	return &vendorsClient{cc}
}

func (c *vendorsClient) Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/vendors.Vendors/Retrieve", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vendorsClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := grpc.Invoke(ctx, "/vendors.Vendors/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vendorsClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := grpc.Invoke(ctx, "/vendors.Vendors/Register", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vendorsClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*VendorsResponse, error) {
	out := new(VendorsResponse)
	err := grpc.Invoke(ctx, "/vendors.Vendors/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Vendors service

type VendorsServer interface {
	Retrieve(context.Context, *RetrieveRequest) (*Response, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
	List(context.Context, *ListRequest) (*VendorsResponse, error)
}

func RegisterVendorsServer(s *grpc.Server, srv VendorsServer) {
	s.RegisterService(&_Vendors_serviceDesc, srv)
}

func _Vendors_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VendorsServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vendors.Vendors/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VendorsServer).Retrieve(ctx, req.(*RetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vendors_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VendorsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vendors.Vendors/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VendorsServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vendors_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VendorsServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vendors.Vendors/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VendorsServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vendors_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VendorsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vendors.Vendors/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VendorsServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Vendors_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vendors.Vendors",
	HandlerType: (*VendorsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Retrieve",
			Handler:    _Vendors_Retrieve_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Vendors_Update_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _Vendors_Register_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Vendors_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vendors.proto",
}

func init() { proto.RegisterFile("vendors.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xcf, 0x4b, 0xeb, 0x40,
	0x10, 0x26, 0x69, 0xe9, 0x8f, 0x09, 0x6d, 0xdf, 0x5b, 0x1e, 0x7d, 0x79, 0x81, 0x87, 0x6d, 0xbc,
	0x14, 0xd4, 0x16, 0x2a, 0x28, 0x7a, 0x50, 0xd0, 0x93, 0xe0, 0x41, 0x02, 0xf5, 0xa0, 0x87, 0xd2,
	0x66, 0x87, 0xba, 0x4a, 0xb3, 0x31, 0xbb, 0x29, 0xfa, 0x8f, 0x7b, 0x96, 0x24, 0xbb, 0x69, 0xd3,
	0x1a, 0x10, 0x6f, 0x9d, 0x6f, 0xbe, 0xf9, 0x66, 0xf6, 0xeb, 0x17, 0x68, 0xad, 0x30, 0xa0, 0x3c,
	0x12, 0xc3, 0x30, 0xe2, 0x92, 0x93, 0xba, 0x2a, 0xdd, 0x3e, 0x74, 0x3c, 0x94, 0x11, 0xc3, 0x15,
	0x7a, 0xf8, 0x1a, 0xa3, 0x90, 0xa4, 0x0d, 0x26, 0xa3, 0xb6, 0xd1, 0x33, 0x06, 0x4d, 0xcf, 0x64,
	0xd4, 0x5d, 0x25, 0x94, 0x05, 0x13, 0x12, 0x23, 0x4d, 0xf9, 0x0f, 0x10, 0x46, 0xfc, 0x19, 0x7d,
	0x39, 0xcd, 0xa9, 0x4d, 0x85, 0xdc, 0x50, 0xa5, 0x60, 0x6a, 0x05, 0x42, 0xa0, 0x1a, 0xcc, 0x96,
	0x68, 0x57, 0x52, 0x24, 0xfd, 0x4d, 0x7a, 0x60, 0x51, 0x14, 0x7e, 0xc4, 0x42, 0xc9, 0x78, 0x60,
	0x57, 0xd3, 0xd6, 0x26, 0xe4, 0x3e, 0xc2, 0xaf, 0xf5, 0x5e, 0x11, 0xf2, 0x40, 0xe0, 0xf6, 0x6d,
	0x64, 0x0f, 0x2c, 0x0c, 0x24, 0x93, 0xef, 0x53, 0x9f, 0x53, 0x54, 0x2b, 0x21, 0x83, 0xae, 0x39,
	0x45, 0xd2, 0x85, 0x9a, 0x40, 0x3f, 0x42, 0xa9, 0x96, 0xab, 0xca, 0xbd, 0x83, 0x46, 0xa9, 0xa8,
	0x3e, 0xd7, 0x2c, 0x3f, 0xb7, 0xb2, 0x7b, 0xee, 0x04, 0x5a, 0x93, 0x90, 0xce, 0x64, 0x99, 0x8f,
	0x3f, 0x94, 0x3d, 0x04, 0xeb, 0x96, 0x09, 0xf9, 0x3d, 0xe7, 0xdd, 0x73, 0x68, 0xeb, 0x23, 0x4a,
	0x1e, 0x67, 0x43, 0x3d, 0x4e, 0x19, 0xd9, 0x1f, 0xd4, 0xf0, 0x74, 0xe9, 0x5e, 0x40, 0xe7, 0x3e,
	0x4b, 0x45, 0x3e, 0x7c, 0x00, 0x3a, 0x28, 0xb6, 0xd1, 0xab, 0x0c, 0xac, 0xf1, 0xef, 0xa1, 0xce,
	0x91, 0xe6, 0x78, 0x9a, 0x31, 0xfe, 0x30, 0xa0, 0xae, 0x04, 0xc8, 0x69, 0x62, 0x6f, 0x16, 0x2b,
	0x62, 0x6f, 0xcc, 0x14, 0x92, 0xe6, 0xec, 0xaa, 0x91, 0x33, 0xa8, 0x65, 0x0f, 0x20, 0xdd, 0xbc,
	0x59, 0xb0, 0xd5, 0xf9, 0xbb, 0x83, 0xab, 0xd1, 0xcb, 0x64, 0x67, 0x96, 0x97, 0xc2, 0xce, 0x42,
	0x74, 0x9d, 0x7f, 0x5f, 0x74, 0x94, 0xc0, 0x09, 0x54, 0x13, 0xab, 0xc9, 0x9f, 0x9c, 0xb2, 0xe1,
	0xbc, 0xb3, 0x96, 0xdc, 0x72, 0xe9, 0x6a, 0xff, 0xa1, 0xbf, 0x60, 0xf2, 0x29, 0x9e, 0x0f, 0x7d,
	0xbe, 0x1c, 0xbd, 0xc4, 0x73, 0x7c, 0x1b, 0xa5, 0x9f, 0xd9, 0xd1, 0x82, 0x8f, 0xd4, 0xd0, 0xbc,
	0x96, 0x22, 0xc7, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x33, 0xf6, 0xe5, 0xf0, 0x89, 0x03, 0x00,
	0x00,
}

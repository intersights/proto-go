// Code generated by protoc-gen-go. DO NOT EDIT.
// source: distributors.proto

/*
Package distributors is a generated protocol buffer package.

It is generated from these files:
	distributors.proto

It has these top-level messages:
	RetrieveRequest
	DistributorResponse
*/
package distributors

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RetrieveRequest struct {
	Domain string `protobuf:"bytes,1,opt,name=domain" json:"domain,omitempty"`
}

func (m *RetrieveRequest) Reset()                    { *m = RetrieveRequest{} }
func (m *RetrieveRequest) String() string            { return proto.CompactTextString(m) }
func (*RetrieveRequest) ProtoMessage()               {}
func (*RetrieveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RetrieveRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type DistributorResponse struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Domain string `protobuf:"bytes,3,opt,name=domain" json:"domain,omitempty"`
}

func (m *DistributorResponse) Reset()                    { *m = DistributorResponse{} }
func (m *DistributorResponse) String() string            { return proto.CompactTextString(m) }
func (*DistributorResponse) ProtoMessage()               {}
func (*DistributorResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DistributorResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DistributorResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DistributorResponse) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func init() {
	proto.RegisterType((*RetrieveRequest)(nil), "distributors.RetrieveRequest")
	proto.RegisterType((*DistributorResponse)(nil), "distributors.DistributorResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Distributors service

type DistributorsClient interface {
	Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (*DistributorResponse, error)
}

type distributorsClient struct {
	cc *grpc.ClientConn
}

func NewDistributorsClient(cc *grpc.ClientConn) DistributorsClient {
	return &distributorsClient{cc}
}

func (c *distributorsClient) Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (*DistributorResponse, error) {
	out := new(DistributorResponse)
	err := grpc.Invoke(ctx, "/distributors.Distributors/Retrieve", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Distributors service

type DistributorsServer interface {
	Retrieve(context.Context, *RetrieveRequest) (*DistributorResponse, error)
}

func RegisterDistributorsServer(s *grpc.Server, srv DistributorsServer) {
	s.RegisterService(&_Distributors_serviceDesc, srv)
}

func _Distributors_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorsServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/distributors.Distributors/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorsServer).Retrieve(ctx, req.(*RetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Distributors_serviceDesc = grpc.ServiceDesc{
	ServiceName: "distributors.Distributors",
	HandlerType: (*DistributorsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Retrieve",
			Handler:    _Distributors_Retrieve_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "distributors.proto",
}

func init() { proto.RegisterFile("distributors.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xc9, 0x2c, 0x2e,
	0x29, 0xca, 0x4c, 0x2a, 0x2d, 0xc9, 0x2f, 0x2a, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x41, 0x16, 0x53, 0xd2, 0xe4, 0xe2, 0x0f, 0x4a, 0x2d, 0x29, 0xca, 0x4c, 0x2d, 0x4b, 0x0d, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe3, 0x62, 0x4b, 0xc9, 0xcf, 0x4d, 0xcc, 0xcc, 0x93,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0x94, 0x02, 0xb9, 0x84, 0x5d, 0x10, 0x5a, 0x83,
	0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0xa0, 0x4a, 0x99,
	0x32, 0x53, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x98, 0xc0, 0x22, 0x60, 0x36,
	0x92, 0x91, 0xcc, 0xc8, 0x46, 0x1a, 0xc5, 0x70, 0xf1, 0x20, 0x19, 0x59, 0x2c, 0xe4, 0xc3, 0xc5,
	0x01, 0x73, 0x8d, 0x90, 0xac, 0x1e, 0x8a, 0xe3, 0xd1, 0x5c, 0x29, 0xa5, 0x88, 0x2a, 0x8d, 0xc5,
	0x65, 0x4e, 0x1a, 0x51, 0x6a, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa,
	0xd9, 0xa5, 0x49, 0xa9, 0x15, 0xfa, 0xe0, 0x30, 0xd0, 0x4d, 0xcf, 0xd7, 0x47, 0xd6, 0x9d, 0xc4,
	0x06, 0x16, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x56, 0x88, 0xf8, 0x99, 0x30, 0x01, 0x00,
	0x00,
}
